# Multi-stage build for RCKangaroo worker
FROM nvidia/cuda:12.0-runtime-ubuntu22.04 as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    curl \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt /tmp/
RUN pip3 install -r /tmp/requirements.txt

# Binary acquisition stage
FROM base as binary-stage

# Build RCKangaroo from source (most secure and reproducible)
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    cmake \
    nvidia-cuda-toolkit \
    && rm -rf /var/lib/apt/lists/*

# Clone and build RCKangaroo from source
WORKDIR /tmp/build
RUN git clone https://github.com/RetiredC/RCKangaroo.git
WORKDIR /tmp/build/RCKangaroo
RUN make gpu=1 CUDA=/usr/local/cuda
RUN cp RCKangaroo /usr/local/bin/
RUN chmod +x /usr/local/bin/RCKangaroo

# Final runtime stage
FROM base as runtime

# Copy binary from build stage
COPY --from=binary-stage /usr/local/bin/RCKangaroo /usr/local/bin/

# Copy worker application
COPY src/worker/ /app/worker/
COPY src/shared/ /app/shared/
WORKDIR /app

# GPU capability verification
RUN nvidia-smi || echo "GPU check will be performed at runtime"

# Performance optimizations
ENV CUDA_CACHE_DISABLE=0
ENV CUDA_CACHE_MAXSIZE=2147483648
ENV CUDA_FORCE_PTX_JIT=0

# Runtime user (security)
RUN useradd -m -s /bin/bash worker
USER worker

ENTRYPOINT ["python3", "worker/main.py"]